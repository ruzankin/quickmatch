cat(f,fn,g,df[ord[j]],'\n')
f=fn
}
dfl[i]=max(df)
cat('\n',i,l,dfl[i])
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
plot(x=ll,y=dfl)
library(gglpot2)
qplot(x=ll,y=dfl)
library(ggplot2)
qplot(x=ll,y=dfl)
ggplot+geom_path(aes(x=ll,y=dfl))
ggplot()+geom_path(aes(x=ll,y=dfl))
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
l
jj=0
#atoms=(jj-l)/sqrt(l)
atoms=2*(jj*log(jj/l)-jj+l)
atoms
jj=0:nn
#atoms=(jj-l)/sqrt(l)
atoms=2*(jj*log(jj/l)-jj+l)
atoms
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
for (i in seq_along(ll)) {
l=ll[i]
jj=0:nn
#atoms=(jj-l)/sqrt(l)
atomssq=2*(jj*log(jj/l)-jj+l)
atomssq[1]=l
atoms=sqrt(atomssq)
asq=atoms*atoms
ord=order(asq)
f=0
for (j in seq_along(jj)) {
fn=f+dpois(jj[ord[j]],l)
g=pchisq(asq[ord[j]],df=1)
df[ord[j]]=max(abs(f-g),abs(fn-g))
#    cat(f,fn,g,df[ord[j]],'\n')
f=fn
}
dflh[i]=max(df)
cat('\r',i,l,dflh[i])
}
ggplot()+
geom_path(aes(x=ll,y=dflh),color='red')+
geom_path(aes(x=ll,y=dflchi),color='blue')
ggplot()+
geom_path(aes(x=ll,y=dflh),color='red',alpha=0.3)+
geom_path(aes(x=ll,y=dflchi),color='blue',alpha=0.3)
ggplot()+
geom_path(aes(x=ll,y=dflh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=dflchi),color='blue',alpha=0.6)
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
source('C:/Pavel/med stat/Denisova/KSdist1.R', echo=TRUE)
ggplot()+
geom_path(aes(x=ll,y=dflh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=dflchi),color='blue',alpha=0.6)+
scale_color_discrete()
?pi
trend=1/sqrt(2*pi*ll)
trend=1/sqrt(2*pi*ll)
ggplot()+
geom_path(aes(x=ll,y=trend),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=dflh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=dflchi),color='blue',alpha=0.6)+
scale_color_discrete()
?xlim
ggplot()+
geom_path(aes(x=ll,y=trend),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=dflh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=dflchi),color='blue',alpha=0.6)+
xlim(0,1)+
scale_color_discrete()
ggplot()+
geom_path(aes(x=ll,y=trend),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=dflh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=dflchi),color='blue',alpha=0.6)+
ylim(0,1)+
scale_color_discrete()
ggplot()+
geom_path(aes(x=ll,y=trend),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=dflh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=dflchi),color='blue',alpha=0.6)+
coord_cartesian(ylim=c(0,1))+
scale_color_discrete()
ggplot()+
geom_path(aes(x=ll,y=trend),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=trend/2),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=dflh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=dflchi),color='blue',alpha=0.6)+
coord_cartesian(ylim=c(0,1))+
scale_color_discrete()
source('C:/Pavel/med stat/Denisova/KSdist1a.R', echo=TRUE)
ggplot()+
geom_path(aes(x=ll,y=trend),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=trend/2),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=-dfmlh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=-dfmlchi),color='blue',alpha=0.6)+
coord_cartesian(ylim=c(0,1))+
scale_color_discrete()
ggplot()+
geom_path(aes(x=ll,y=trend),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=-trend),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=dfplh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=dfplchi),color='blue',alpha=0.6)+
geom_path(aes(x=ll,y=dfmlh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=dfmlchi),color='blue',alpha=0.6)+
coord_cartesian(ylim=c(0,1))+
scale_color_discrete()
ggplot()+
geom_path(aes(x=ll,y=trend),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=-trend),color='green',alpha=0.6)+
geom_path(aes(x=ll,y=dfplh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=dfplchi),color='blue',alpha=0.6)+
geom_path(aes(x=ll,y=dfmlh),color='red',alpha=0.6)+
geom_path(aes(x=ll,y=dfmlchi),color='blue',alpha=0.6)+
coord_cartesian(ylim=c(-1,1))+
scale_color_discrete()
?int64
??int64
seq(0,1,length.out = 10)
seq(0,1,length.out = 1000)
?seq
library(parallel)
?detectCores
?outer
xl=1:10
yl=xl
outer(xl,yl)
outer(xl,yl,"+")
(22480-22096)*2.68+(161-158)*(108.19+14.24)+(257-251)*(18.56+14.24)
?Chisquare
qchisq(c(0.025,0.975),df=100)
100-sqrt(200)
100+sqrt(200)
qchisq(c(0.025,0.975),df=1000)
1000+sqrt(2000)
1000-sqrt(2000)
qchisq(c(0.025,0.975),df=10000)
10000-sqrt(20000)
10000+sqrt(20000)
qnorm(0.025)
10000+2*sqrt(20000)
10000-2*sqrt(20000)
10000-1.96*sqrt(20000)
10000+1.96*sqrt(20000)
sqrt(1.1)
factorial(50)
factorial(100)
factorial(200)
factorial(150)
factorial(160)
factorial(170)
factorial(180)
factorial(177)
factorial(175)
factorial(171)
factorial(170)
f=function(x) {
x*factorial(floor(x))*exp(x)/(2*x^(floor(x)+1))
}
xx=seq(1,10,0.1)
yy=f(xx)
plot(x=xx,y=yy,type='l')
yy=xx/f(xx)^2-1
plot(x=xx,y=yy,type='l')
f=function(x) {
(2*x^(floor(x)+1))/(factorial(floor(x))*exp(x))
}
xx=seq(1,10,0.1)
yy=xx/f(xx)^2-1
plot(x=xx,y=yy,type='l')
xx=seq(0.1,10,0.1)
yy=xx/f(xx)^2-1
plot(x=xx,y=yy,type='l')
170/f(170)^2-1
80/f(80)^2-1
?gamma
lgamma(100)
lgamma(200)
f=function(x) {
2*exp((floor(x)+1)*log(x)-x-lgamma(floor(x)+1))
}
xx=seq(0.1,10,0.1)
yy=xx/f(xx)^2-1
plot(x=xx,y=yy,type='l')
xx=seq(0.1,10,0.01)
yy=xx/f(xx)^2-1
plot(x=xx,y=yy,type='l')
xx=100
xx/f(xx)^2-1
xx=1000
xx/f(xx)^2-1
xx=10000
xx/f(xx)^2-1
xx=20000
xx/f(xx)^2-1
xx=30000
xx/f(xx)^2-1
xx=100000
xx/f(xx)^2-1
xx=100000.5
xx/f(xx)^2-1
xx=1000
xx/f(xx)^2-1
xx=1000.5
xx/f(xx)^2-1
pi
formatC(pi,digits=20)
rpois(20,70000)
sqrt(70000)
exp(-70000)
exp(-10000)
exp(-20000)
exp(-1000)
25^4
10^40
rexp(100)
a=log(runif(128^3*10000))
a=log(runif(64^3*10000))
a=log(runif(64^3*1000))
a=runif(64^3*1000)
b=log(a)
size(a)
length(a)
128*128*128*10000*8
a=numeric(128*128*128*10000)
a=numeric(128*128*10*10000)
m = matrix(runif(100),10,10)
par(mar=c(0, 0, 0, 0))
image(m, useRaster=TRUE, axes=FALSE)
?image
m = matrix(runif(100),10,10)
par(mar=c(0, 0, 0, 0))
image(m)
m = matrix(runif(100),10,10)
par(mar=c(0, 0, 0, 0))
image(m)
par(mar = rep(0, 4))
image(m, axes = FALSE, col = grey(seq(0, 1, length = 256)))
par(mar = rep(0, 4))
image(m, axes = FALSE, col = grey(seq(0, 1, length = 100)))
par(mar = rep(0, 4))
image(m, axes = FALSE, col = grey(seq(0, 1, length = 1000)))
10^2
source('C:/Pavel/MED STAT/Denisova/rcode/planereg.R', echo=TRUE)
source('C:/Pavel/MED STAT/Denisova/rcode/planereg.R', echo=TRUE)
source('C:/Pavel/MED STAT/Denisova/rcode/planereg.R', echo=TRUE)
g=matrix(rpois(length(lambda),lambda),nrow=ysize,ncol=xsize)
lambda=as.vector(fb)
g=matrix(rpois(length(lambda),lambda),nrow=ysize,ncol=xsize)
image(g)
greyscale=grey(seq(0, 1, length = 1000))
image(fb,col=greyscale)
lambda=as.vector(fb)
g=matrix(rpois(length(lambda),lambda),nrow=ysize,ncol=xsize)
image(g,col=greyscale)
image(fb,col=greyscale)
lambda=as.vector(fb)
g=matrix(rpois(length(lambda),lambda),nrow=ysize,ncol=xsize)
image(g,col=greyscale)
source('C:/Pavel/MED STAT/Denisova/rcode/planereg.R', echo=TRUE)
source('C:/Pavel/MED STAT/Denisova/rcode/planereg.R', echo=TRUE)
?matrix
colshift=cbind(0,fm[,-1])
fm=g
colshift=cbind(0,fm[,-1])
View(colshift)
View(fm)
colshift=cbind(0,fm[,-ncol(fm)])
delta = function(fm) {
colshift=cbind(0,fm[,-ncol(fm)])
rowshift=rbind(0,fm[-nrow(fm),])
return(c((fm-colshift)^2L,(fm-rowshift)^2L))
}
View(delta(fm))
length(delta(fm))
View(fm-colshift)
View((fm-colshift)^2L)
View(c((fm-colshift)^2L))
(22958-22480)*2.68+(166-161)*(108.19+14.24)+(266-257)*(18.56+14.24)
1024^3*10000
a=numeric(1024^3*10000)
a=numeric(1024^3)
rm(a)
a=array(0,dim=c(1024,1024,1024))
rm(a)
a=array(0,dim=c(128,128,128))
a=array(0,dim=c(128,128,128,128,128))
a=array(0,dim=c(128,128,128))
a=array(0,c(50,50,10000))
citation()
install.packages('cobalt')
for (k in 2:20) print(factorial(k+1)/4/exp(k/8))
for (k in 2:20) print(factorial(k+1)/exp((k-2)/8))
(32138-31932)*2.68+(661-657)*(105.35+14.24)+(905-896)*(18.56+14.24)
(23242-22958)*2.68+(168-166)*(108.19+14.24)+(274-266)*(18.56+14.24)
?interaction
str(c())
type(c())
class(c())
factor(c(),levels=c("C1","T1"))
a=factor(c(),levels=c("C1","T1"))
levels(a)
as.list(c(1,2))
load("C:/Pavel/MED STAT/Laktionov1/v6/newvars1.RData")
rm(list=setdiff(ls(), c("gstp_combinations","rnf_combinations"))
)
rm(list=setdiff(ls(), c("gstp_uvars","rnf_uvars")))
load("C:/Pavel/MED STAT/Laktionov1/v6/newvars1.RData")
rm(list=setdiff(ls(), c("gstp_uvars","rnf_uvars")))
save.image("C:/Pavel/MED STAT/Laktionov1/v6/uvars.RData")
library(stringi)
stri_trans_general('Ёжик','serbian-latin/bgn')
stri_trans_general('Ёжик','russian-latin/bgn')
305^4*3
305^3*3
400^3/6
400^3/6/3600
400^3/6/3600/32
?Poisson
n=10000
a=numeric(n)
m=3.5
for (j in 0:n) {
a[j]=(abs(j-m))^3 / factorial(j)
}
sum(a)
n=10000
n=10000
a=numeric(n)
m=3.5
for (j in 0:n) {
a[j]=(abs(j-m))^5 / factorial(j)
}
sum(a)
n=100000
a=numeric(n)
m=3.5
for (j in 0:n) {
a[j]=(abs(j-m))^5 / factorial(j)
}
sum(a)
a[j]=(abs(j-m))^3 / factorial(j)
n=100000
a=numeric(n)
m=3.5
for (j in 0:n) {
a[j]=(abs(j-m))^3 / factorial(j)
}
sum(a)
n=100000
a=numeric(n)
m=3.5
for (j in 0:n) {
a[j]=(abs(j-m))^7 / factorial(j)
}
sum(a)
n=100000
a=numeric(n)
m=3
for (j in 0:n) {
a[j]=(abs(j-m))^7 / factorial(j)
}
sum(a)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
3^0
n=100000
a=numeric(n)
m=3
for (j in 0:n) {
a[j]=(abs(j-m))*m^j / factorial(j)
}
print(sum(a))
print(2*m^{m+1}/factorial(m))
summary(a)
lgamma()
?gamma
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?ppois
2*(1-30+120)+6*(1-12)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
?lgamma
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
source('C:/Pavel/TEXWRK/central/coentr1.R', echo=TRUE)
(32632-32138)*2.68+(667-661)*(105.35+14.24)+(916-905)*(18.56+14.24)
(32362-32138)*2.68+(667-661)*(105.35+14.24)+(916-905)*(18.56+14.24)
version()
R.version()
getRversion()
?install.packages
?repeat
()
?repet
?repeat
?"repeat"
seq(1,5,-1)
citation()
source('C:/Pavel/MED STAT/Denisova/Reconstructions/MAPENT7000/compmeds.R', echo=TRUE)
source('C:/Pavel/MED STAT/Denisova/Reconstructions/MAPENT7000/compmeds.R', echo=TRUE)
?plot
400^4/24/1000*2/3600
400^4/24/1000*2/3600/48
406^4/24
406^4/24*8/1024/1024
407^3/6
407^4/24
407^4/24/1000000
407^4/24/1000000
len(a)
406^4/4/1000
a=character(10000000)
for j in (1:10000000) a[j]='Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
for (j in (1:10000000)) a[j]='Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
length(a[[1]])
length(a[1])
length(a[2])
a[1]
nchar(a[2])
406^4/24/10000
?read.table
406^3/24
406^3/6
406^2/2
400^4/24/10000
library(cobalt)
citation('cobalt')
?var.names
406^4/24/10000000
9*111/60
detectCores()
library(parallel)
detectCores()
?detectCores
10*100/60
detectCores(T)
detectCores(F)
406^3/6*100
406^3/6*100/10000*50
a=list()
a[[1]]
a[[2]]
a[[3]]
a=list(c(1,2,3))
a
a[[1]]
a[[2]]
splitIndices(0,1)
library(parallel)
splitIndices(0,10)
406*405/2+406*405*404/6
citation()
a=0
a[2]=1
a[4]=5
a
setwd("C:/Pavel/quickmatch package")
library(devtools)
library(roxygen2)
detach("package:quickmatch", unload=TRUE)
setwd('quickmatch')
document()
setwd('..')
remove.packages('quickmatch')
install('quickmatch')
library(quickmatch)
?quickmatch
?document
setwd('quickmatch')
#document()
roxygenize(clean=T)
document(clean=T)
#document(clean=T)
roxygenize(clean=T)
